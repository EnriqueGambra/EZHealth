#BlueJ class context
comment0.target=ReceptionistAppointmentViewTest
comment0.text=\r\n\ The\ test\ class\ ReceptionistAppointmentViewTest.\r\n\r\n\ @author\ \ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=ReceptionistAppointmentViewTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ ReceptionistAppointmentViewTest\r\n
comment10.params=
comment10.target=void\ testValidPatientIDReturnsFirstName()
comment10.text=\r\n\ Test\ of\ retrievePatientFirstName\ method,\ of\ class\ Appointment.\r\n
comment11.params=
comment11.target=void\ testInvalidPatientIDFirstNameReturnsNull()
comment11.text=\r\n\ Test\ of\ retrievePatientFirstName\ method,\ of\ class\ Appointment.\r\n
comment12.params=
comment12.target=void\ testValidPatientIDReturnsLastName()
comment12.text=\r\n\ Test\ of\ retrievePatientLastName\ method,\ of\ class\ Appointment.\r\n
comment13.params=
comment13.target=void\ testInvalidPatientIDLastNameReturnsNull()
comment13.text=\r\n\ Test\ of\ retrievePatientLastName\ method,\ of\ class\ Appointment.\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ testCreatedDateReturnsTrue()
comment4.text=\r\n\ Test\ of\ retrieveAppointmentInfo\ method,\ of\ class\ Appointment.\r\n\ Retrieves\ the\ appointment\ info\ from\ the\ database\ and\ returns\ a\ hashmap\r\n\ with\ all\ appointment\ info.\ If\ error\ will\ return\ an\ exception\ or\ false\r\n\ signifying\ the\ date\ hasn't\ been\ created\ in\ the\ database\r\n
comment5.params=
comment5.target=void\ testNotYetCreatedDateReturnsFalse()
comment5.text=\r\n\ Test\ of\ retrieveAppointmentInfo\ method,\ of\ class\ Appointment.\r\n\ Retrieves\ the\ appointment\ info\ from\ the\ database\ and\ will\ return\ a\ hashmap\r\n\ of\ less\ than\ size\ 0\ because\ this\ particular\ date\ hasn't\ yet\ been\ created\r\n\ in\ the\ database\r\n\ NOTE\:\ if\ we\ actually\ run\ through\ the\ logic\ for\ the\ date\ 10/10/1900\r\n\ and\ create\ appointments\ for\ this\ date\ this\ test\ will\ fail...\r\n
comment6.params=
comment6.target=void\ testImproperFormattedDateReturnsFalse()
comment6.text=\r\n\ Test\ of\ retrieveAppointmentInfo\ method,\ of\ class\ Appointment.\r\n
comment7.params=
comment7.target=void\ testProperFormattedDateReturnsTrue()
comment7.text=\r\n\ Test\ of\ retrieveAppointmentInfo\ method,\ of\ class\ Appointment.\r\n
comment8.params=
comment8.target=void\ testValidDoctorIDReturnsName()
comment8.text=\r\n\ Test\ of\ retrieveDoctorName\ method,\ of\ class\ Appointment.\r\n
comment9.params=
comment9.target=void\ testInvalidDoctorIDReturnsNull()
comment9.text=\r\n\ Test\ of\ retrieveDoctorName\ method,\ of\ class\ Appointment.\r\n
numComments=14
